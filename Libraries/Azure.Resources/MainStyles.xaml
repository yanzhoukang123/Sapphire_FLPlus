<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <FontFamily x:Key="DefaultFont">/Fonts/#Mulish-Regular</FontFamily>
    <FontFamily x:Key="Mulish">/Fonts/#Mulish-Regular</FontFamily>
    <!--  Height and Width Resources  -->
    <System:Double x:Key="NavigationListWidth">250</System:Double>
    <System:Double x:Key="MainFontSize">15</System:Double>

    <!--  Text Styles  -->
    <Style x:Key="TextBlockPageHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="TextBlockSubNavStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="LineHeight" Value="16" />
    </Style>

    <Style x:Key="TextBlockBodyTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="MenuItemIconTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--  Seperator Line Style  -->
    <Style x:Key="SeperatorLineRec" TargetType="{x:Type Rectangle}">
        <Setter Property="Opacity" Value="0.15" />
        <Setter Property="Stroke" Value="Black" />
    </Style>

    <!--  Left Side Navigation RadioButton Style  -->
    <Style x:Key="NavigationRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="90" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{StaticResource MainFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{StaticResource NavRadioButtonSelectedBackground}"
                            Opacity="0.25"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="SelectionIndicator"
                            Width="4"
                            HorizontalAlignment="Left"
                            Fill="{StaticResource NavRadioButtonSelectedIndicatorBackground}"
                            Visibility="Collapsed" />
                        <Grid
                            x:Name="ContentGrid"
                            Margin="10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Opacity="0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Vertical"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                            <TextBlock
                                x:Name="contentPresenter"
                                HorizontalAlignment="Center">
                                    <Grid>
                                        <Image Source="{TemplateBinding Content}" />
                                    </Grid>
                            </TextBlock>
                            <TextBlock x:Name="contentLabel"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" 
                                       FontWeight="Bold"
                                       FontSize="16px"
                                       Margin="0,10,0,0"
                                       FontFamily="./Fonts/#Mulish"
                                       Foreground="#E5F1FD"
                                       Text="{TemplateBinding Tag}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value="0.4" />
                            <Setter TargetName="contentLabel" Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value="0.6" />
                            <Setter TargetName="contentLabel" Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="ContentGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="SelectionIndicator" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="contentLabel" Property="Foreground" Value="#0097FC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  SubNavigation RadioButton Style  -->
    <Style x:Key="SubNavRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <StackPanel x:Name="templateRoot" Background="Transparent" Opacity="0.6">
                        <TextBlock x:Name="contentPresenter" 
                                   Style="{StaticResource TextBlockSubNavStyle}" 
                                   Text="{TemplateBinding Content}"/>
                        <Rectangle
                            x:Name="SelectionIndicator"
                            Height="4"
                            Fill="{StaticResource NavRadioButtonSelectedIndicatorBackground}"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="templateRoot" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="templateRoot" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="templateRoot" Property="Opacity" Value="1" />
                            <Setter TargetName="SelectionIndicator" Property="Visibility" Value="Visible" />
                            <Setter TargetName="contentPresenter" Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Left Side Navigation RadioButton Style  -->
    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="90" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{StaticResource MainFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{StaticResource NavRadioButtonSelectedBackground}"
                            Opacity="0.25"
                            Visibility="Collapsed" />
                        <Grid
                            x:Name="ContentGrid"
                            Margin="10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Opacity="0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Vertical"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <TextBlock
                                    x:Name="contentPresenter"
                                    HorizontalAlignment="Center">
                                    <Grid>
                                        <Image Source="{TemplateBinding Content}" Height="32" />
                                    </Grid>
                                </TextBlock>
                                <TextBlock x:Name="contentLabel" 
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" 
                                       FontWeight="Bold"
                                       FontSize="16px"
                                       Margin="0,10,0,0"
                                       FontFamily="./Fonts/#Mulish"
                                       Foreground="#E5F1FD"
                                       Text="{TemplateBinding Tag}"
                                       TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value="0.4" />
                            <Setter TargetName="contentLabel" Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value="0.6" />
                            <Setter TargetName="contentLabel" Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  New Button Styles  -->

    <!--  Raised Button  -->
    <Style x:Key="RaisedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RaisedButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="12,1" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="82" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="ShadowGrid">
                            <Rectangle
                                Fill="Black"
                                Opacity="0.26"
                                RadiusX="3"
                                RadiusY="3"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform Y="1.83" />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1" />
                                </Rectangle.Effect>
                            </Rectangle>
                            <Rectangle
                                Fill="Black"
                                Opacity="0.08"
                                RadiusX="3"
                                RadiusY="3">
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1.33" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </Grid>
                        <Grid SnapsToDevicePixels="true">
                            <Rectangle
                                x:Name="BackgroundRec"
                                Fill="{TemplateBinding Background}"
                                RadiusX="3"
                                RadiusY="3" />
                            <Rectangle
                                x:Name="FocusRecOverlay"
                                Fill="{StaticResource RaisedButtonMouseOverBackground}"
                                RadiusX="3"
                                RadiusY="3"
                                Visibility="Collapsed" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource RaisedButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource RaisedButtonDisabledBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource RaisedButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RaisedImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#004898" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="12,1" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="82" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="ShadowGrid">
                            <Rectangle
                                Fill="Transparent"
                                Opacity="0.26"
                                RadiusX="3"
                                RadiusY="3"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform Y="1.83" />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1" />
                                </Rectangle.Effect>
                            </Rectangle>
                            <Rectangle
                                Fill="Transparent"
                                Opacity="0.08"
                                RadiusX="3"
                                RadiusY="3">
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1.33" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </Grid>
                        <Grid SnapsToDevicePixels="true">
                            <Rectangle
                                x:Name="BackgroundRec"
                                Fill="{TemplateBinding Background}"
                                RadiusX="10"
                                RadiusY="10" />
                            <Rectangle
                                x:Name="FocusRecOverlay"
                                Fill="{StaticResource RaisedButtonMouseOverBackground}"
                                RadiusX="3"
                                RadiusY="3"
                                Visibility="Collapsed" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource RaisedButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource RaisedButtonDisabledBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource RaisedButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BorderBrush="White"
    BorderThickness="1"-->
    <Style x:Key="RaisedTransImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="12,1" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="82" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="ShadowGrid">
                            <Rectangle
                                Fill="Transparent"
                                Opacity="0.26"
                                RadiusX="3"
                                RadiusY="3"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform Y="1.83" />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1" />
                                </Rectangle.Effect>
                            </Rectangle>
                            <Rectangle
                                Fill="Transparent"
                                Opacity="0.08"
                                RadiusX="3"
                                RadiusY="3">
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1.33" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </Grid>
                        <Grid SnapsToDevicePixels="true">
                            <Rectangle
                                x:Name="BackgroundRec"
                                Fill="{TemplateBinding Background}"
                                RadiusX="10"
                                RadiusY="10" />
                            <Rectangle
                                x:Name="FocusRecOverlay"
                                Fill="{StaticResource RaisedButtonMouseOverBackground}"
                                RadiusX="3"
                                RadiusY="3"
                                Visibility="Collapsed" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource RaisedButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource RaisedButtonDisabledBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource RaisedButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 

    <!--  Secondary Raised Button  -->
    <Style x:Key="SecondaryRaisedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SecondaryRaisedButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,1" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="88" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="ShadowGrid">
                            <Rectangle
                                Fill="Black"
                                Opacity="0.26"
                                RadiusX="3"
                                RadiusY="3"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform Y="1.83" />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1" />
                                </Rectangle.Effect>
                            </Rectangle>
                            <Rectangle
                                Fill="Black"
                                Opacity="0.08"
                                RadiusX="3"
                                RadiusY="3">
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1.33" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </Grid>
                        <Grid SnapsToDevicePixels="true">
                            <Rectangle
                                x:Name="BackgroundRec"
                                Fill="{TemplateBinding Background}"
                                RadiusX="3"
                                RadiusY="3" />
                            <Rectangle
                                x:Name="FocusRecOverlay"
                                Fill="{StaticResource SecondaryRaisedButtonMouseOverBackground}"
                                RadiusX="3"
                                RadiusY="3"
                                Visibility="Collapsed" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource SecondaryRaisedButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource SecondaryRaisedButtonDisabledBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource SecondaryRaisedButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  FlatButton Style  -->
    <Style x:Key="FlatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,1" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="BackgroundRec" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatButtonMouseOverBackground}" Visibility="Collapsed" />
                        <TextBlock
                            x:Name="ContentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  FlatIconButton Style  -->
    <!--<Style x:Key="FlatIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource FlatButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,1" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="BackgroundRec" Fill="{TemplateBinding Background}" Stroke="White" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="Icon"
                                VerticalAlignment="Center"
                                FontFamily="Segoe MDL2 Assets"
                                FontSize="16"
                                Text="{TemplateBinding Content}" />
                            <TextBlock
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="8,0,0,0"
                                Focusable="False"
                                Text="{TemplateBinding Tag}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource FlatButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--  FlatIconButton Style  -->
    <Style x:Key="FlatIconVerticalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource FlatButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,1" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="BackgroundRec" Fill="{TemplateBinding Background}" Stroke="White" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock
                                x:Name="Icon"
                                HorizontalAlignment="Center"
                                FontFamily="Segoe MDL2 Assets"
                                FontSize="16"
                                Text="{TemplateBinding Tag}" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Row="1"
                                Margin="0,0,0,0"
                                Focusable="False" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource FlatButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  FlipHorizontal Button Style  -->
    <Style x:Key="FlipHorizontalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource FlatButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,1" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="BackgroundRec" Fill="{TemplateBinding Background}" Stroke="White" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <Path
                                    Width="10"
                                    Height="15 "
                                    Data="M10.333333,0 L15,0 15,20 0,20 z"
                                    Fill="#FFFFFFFF"
                                    Stretch="Fill" />
                                <Path
                                    Width="10"
                                    Height="15 "
                                    Margin="2,0,0,0"
                                    Data="M0,0 L5.0,0 15,20 0,20 z"
                                    Fill="#33FFFFFF"
                                    Stretch="Fill" />
                            </StackPanel>
                            <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" Focusable="False" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource FlatButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  FlipVertical Button Style  -->
    <Style x:Key="FlipVerticalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource FlatButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,1" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="BackgroundRec" Fill="{TemplateBinding Background}" Stroke="White" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" RenderTransformOrigin="0.5,0.5">
                                <StackPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </StackPanel.RenderTransform>
                                <Path
                                    Width="10"
                                    Height="15 "
                                    Data="M10.333333,0 L15,0 15,20 0,20 z"
                                    Fill="#FFFFFFFF"
                                    Stretch="Fill" />
                                <Path
                                    Width="10"
                                    Height="15 "
                                    Margin="2,0,0,0"
                                    Data="M0,0 L5.0,0 15,20 0,20 z"
                                    Fill="#33FFFFFF"
                                    Stretch="Fill" />
                            </StackPanel>
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                Focusable="False" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource FlatButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Floating Action Raised Button  -->
    <Style x:Key="FloatingActionRasiedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="ShadowGrid" Width="{TemplateBinding MinWidth}" Height="{TemplateBinding MinHeight}">
                            <Ellipse Fill="Black" Opacity="0.26" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform Y="3.67" />
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                                <Ellipse.Effect>
                                    <BlurEffect Radius="2" />
                                </Ellipse.Effect>
                            </Ellipse>
                            <Ellipse Fill="Black" Opacity="0.08">
                                <Ellipse.Effect>
                                    <BlurEffect Radius="2.67" />
                                </Ellipse.Effect>
                            </Ellipse>
                        </Grid>
                        <Grid Width="{TemplateBinding MinWidth}" Height="{TemplateBinding MinHeight}" SnapsToDevicePixels="true">
                            <Ellipse
                                x:Name="BackgroundEllipse"
                                Fill="{TemplateBinding Background}"
                                Stroke="#00000000"
                                StrokeThickness="0.1" />
                            <Ellipse x:Name="FocusEllipseOverlay" Fill="{StaticResource FloatingActionMouseOverBackground}" Visibility="Collapsed" />
                            <TextBlock
                                x:Name="IconTextBlock"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontFamily="Segoe MDL2 Assets"
                                FontWeight="Bold"
                                Foreground="{StaticResource FloatingActionButtonIconBrush}"
                                Text="&#xE710;" />
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="8,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusEllipseOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{StaticResource FloatingActionButtonPressedBackground}" />
                            <Setter TargetName="FocusEllipseOverlay" Property="Opacity" Value="0" />
                            <Setter TargetName="IconTextBlock" Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{StaticResource FloatingActionButtonDisabledBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource FloatingActionButtonDisabledForeground}" />
                            <Setter TargetName="ShadowGrid" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IconTextBlock" Property="Foreground" Value="{StaticResource FloatingActionButtonDisabledIconBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Icon Button Style  -->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource IconButtonForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock
                        x:Name="contentPresenter"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Text="{TemplateBinding Content}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Icon Button with background Style  -->
    <Style x:Key="BackgroundIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BackgroundIconButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundIconButtonForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRec"
                            Fill="{TemplateBinding Background}"
                            RadiusX="3"
                            RadiusY="3" />
                        <Rectangle
                            x:Name="FocusRec"
                            Fill="{StaticResource BackgroundIconMouseOverBackground}"
                            RadiusX="3"
                            RadiusY="3"
                            Visibility="Collapsed" />
                        <TextBlock
                            x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRec" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource BackgroundIconPressedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  IconTextButton Style  -->
    <Style x:Key="IconTextButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource IconTextButtonBackground}" />
        <Setter Property="Height" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid
                            x:Name="ContentGrid"
                            Margin="12,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Margin="0,0,8,0">
                                <Grid>
                                    <Image Source="{TemplateBinding Content}"
                                           Height="20"/>
                                </Grid>
                            </TextBlock>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Tag}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource IconTextButtonMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource IconTextButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource IconTextButtonPressedForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource IconTextButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Icon ToggleButton Style  -->
    <Style x:Key="IconDropDownToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource IconToggleButtonBackground}" />
        <Setter Property="Height" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid
                            x:Name="ContentGrid"
                            Margin="12,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="contentPresenter"
                                Margin="0,0,8,0">
                                <Grid>
                                    <Image Source="{TemplateBinding Content}"
                                           Height="20"/>
                                </Grid>
                            </TextBlock>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding Tag}" />
                            <Border
                                Grid.Column="2"
                                Width="20"
                                Margin="0"
                                HorizontalAlignment="Right"
                                SnapsToDevicePixels="true">
                                <TextBlock
                                    x:Name="arrow"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="12"
                                    FontWeight="Bold"
                                    Foreground="#FFFFFF"
                                    Opacity="0.8"
                                    Text="&#xE96E;" />
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource IconToggleButtonMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource IconToggleButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource IconToggleButtonPressedForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource IconToggleButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileIconDropDownToggleButton" BasedOn="{StaticResource IconDropDownToggleButton}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=FilePopup, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CopyIconDropDownToggleButton" BasedOn="{StaticResource IconDropDownToggleButton}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=CopyPopup, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ViewIconDropDownToggleButton" BasedOn="{StaticResource IconDropDownToggleButton}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ViewPopup, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InfoIconDropDownToggleButton" BasedOn="{StaticResource IconDropDownToggleButton}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=InfoPopup, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrinterIconDropDownToggleButton" BasedOn="{StaticResource IconDropDownToggleButton}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=PrinterPopup, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Gallery Icon Toggle button with no dropdown  -->
    <Style x:Key="GalleryIconToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource GalleryIconToggleButtonBackground}" />
        <Setter Property="Height" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="8">
                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid
                            x:Name="ContentGrid"
                            Margin="12,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="contentPresenter"
                                       Margin="0,0,8,0">
                                <Grid>
                                    <Image Source="{TemplateBinding Content}"
                                            Height="20"/>
                                </Grid>
                            </TextBlock>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding Tag}" />
                        </Grid>
                        <Rectangle x:Name="MouseOverRec" Fill="{StaticResource GalleryIconToggleButtonMouseOverBackground}" Visibility="Collapsed" />
                    </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="MouseOverRec" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource GalleryIconToggleButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource GalleryIconToggleButtonPressedForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource GalleryIconToggleButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource GalleryIconToggleButtonPressedForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource GalleryIconToggleButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Flat Toggle Button Style  -->
    <Style x:Key="FlatToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource FlatToggleButtonBackground}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8,1" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="88" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRec"
                            Fill="{TemplateBinding Background}"
                            RadiusX="3"
                            RadiusY="3"
                            Visibility="Visible" />
                        <Rectangle
                            x:Name="FocusRecOverlay"
                            Fill="{StaticResource FlatToggleButtonMouseOverBackground}"
                            RadiusX="3"
                            RadiusY="3"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonDisabledBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource FlatToggleButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Flat Icon Toggle Button Style  -->
    <Style x:Key="FlatIconToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <!--<Rectangle
                            x:Name="BackgroundRec"
                            
                            Visibility="Visible" />-->
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatToggleButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <Image Source="{TemplateBinding Content}"
                                            Height="{TemplateBinding Height}"/>
                                </Grid>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />-->
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonDisabledBackground}" />-->
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource FlatToggleButtonDisabledForeground}" />
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Flat Icon Toggle Button Style  -->
    <Style x:Key="GalleryFlatIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="BackgroundEllipse" Visibility="Visible" />
                        <!--<Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatToggleButtonMouseOverBackground}" Visibility="Collapsed" />-->
                        <Grid Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextBlock
                                x:Name="contentPresenter"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <Image Source="{TemplateBinding Content}"
                                           Height="{TemplateBinding Height}"/>
                                </Grid>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />-->
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                                <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                                <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonDisabledBackground}" />-->
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource FlatToggleButtonDisabledForeground}" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Flat Color Channel ToggleButton Style  -->
    <Style x:Key="FlatColorToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource FlatToggleButtonBackground}" />
        <!--<Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />-->
        <Setter Property="Padding" Value="1" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRec"
                            Fill="{TemplateBinding Background}"
                            Stroke="#FFFFFFFF"
                            Visibility="Visible" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatToggleButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Ellipse
                                Width="32"
                                Height="32"
                                Fill="{TemplateBinding Foreground}"
                                Stroke="#FF999999" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Flat All Color Channel ToggleButton Style  -->
    <Style x:Key="FlatAllColorToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource FlatToggleButtonBackground}" />
        <!--<Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />-->
        <Setter Property="Padding" Value="1" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRec"
                            Fill="{TemplateBinding Background}"
                            Stroke="#FFFFFFFF"
                            Visibility="Visible" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatToggleButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Ellipse
                                Width="20"
                                Height="20"
                                Margin="0,0,4,6"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Fill="Green" />
                            <Ellipse
                                Width="20"
                                Height="20"
                                Margin="4,0,0,6"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Fill="Blue" />
                            <Ellipse
                                Width="20"
                                Height="20"
                                Margin="0,6,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Fill="Red" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Invert Toggle Button Style  -->
    <Style x:Key="InvertToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource FlatToggleButtonBackground}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatToggleButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <Image Source="{TemplateBinding Content}"
                                            Height="{TemplateBinding Height}"/>
                                </Grid>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />-->
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonDisabledBackground}" />-->
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource FlatToggleButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Saturation Toggle Button Style  -->
    <Style x:Key="SaturationToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource FlatToggleButtonBackground}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="12,1" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle
                            x:Name="BackgroundRec"
                            Fill="{TemplateBinding Background}"
                            Stroke="#FFFFFFFF"
                            Visibility="Visible" />
                        <Rectangle x:Name="FocusRecOverlay" Fill="{StaticResource FlatToggleButtonMouseOverBackground}" Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextBlock
                                x:Name="contentPresenter"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <Image Source="{TemplateBinding Content}"
                                            Height="{TemplateBinding Height}"/>
                                </Grid>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonPressedBackground}" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundRec" Property="Fill" Value="{StaticResource FlatToggleButtonDisabledBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource FlatToggleButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Switch ToggleButton Style  -->
    <Style x:Key="SwitchToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="12" MaxWidth="12" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter
                            x:Name="Header"
                            Grid.ColumnSpan="3"
                            Margin="0,0,0,8"
                            HorizontalAlignment="Left"
                            Content="{TemplateBinding Content}" />
                        <Grid
                            x:Name="SwitchArea"
                            Grid.Row="1"
                            Grid.ColumnSpan="3"
                            Margin="0,5"
                            Background="Transparent" />
                        <Rectangle
                            x:Name="OuterBorder"
                            Grid.Row="1"
                            Width="44"
                            Height="20"
                            Fill="{StaticResource SwitchToggleButtonFillOff}"
                            RadiusX="10"
                            RadiusY="10"
                            Stroke="{StaticResource SwitchToggleButtonStrokeOffBorder}"
                            StrokeThickness="2" />
                        <Rectangle
                            x:Name="SwitchKnobBounds"
                            Grid.Row="1"
                            Width="44"
                            Height="20"
                            Fill="{StaticResource SwitchToggleButtonFillOn}"
                            Opacity="0"
                            RadiusX="10"
                            RadiusY="10"
                            Stroke="#FF000000"
                            StrokeThickness="0" />
                        <Grid
                            x:Name="SwitchKnob"
                            Grid.Row="1"
                            Width="20"
                            Height="20"
                            HorizontalAlignment="Left">
                            <Image Source="/Images/btn_auto-save-selected.png" />


                            <Ellipse
                                x:Name="SwitchKnobOn"
                                Width="10"
                                Height="10"
                                Fill="{StaticResource SwitchToggleButtonKnobFillOn}"
                                Opacity="0"
                                RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="26" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse
                                x:Name="SwitchKnobOff"
                                Width="10"
                                Height="10"
                                Fill="{StaticResource SwitchToggleButtonKnobFillOff}"
                                RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="2" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <TextBlock
                            x:Name="OffTextBlock"
                            Grid.Row="1"
                            Grid.Column="2"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}"
                            Opacity="1"
                            Text="" />
                        <TextBlock
                            x:Name="OnTextBlock"
                            Grid.Row="1"
                            Grid.Column="2"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Text="" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{StaticResource SwitchToggleButtonKnobFillOnPointerOver}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{StaticResource SwitchToggleButtonFillOnPointerOver}" />
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{StaticResource SwitchToggleButtonKnobFillOffPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{StaticResource SwitchToggleButtonKnobFillOffPressed}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{StaticResource SwitchToggleButtonFillOnPressed}" />
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{StaticResource SwitchToggleButtonKnobFillOnPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="OffTextBlock" Property="Foreground" Value="{StaticResource SwitchToggleButtonDisabledForeground}" />
                            <Setter TargetName="OnTextBlock" Property="Foreground" Value="{StaticResource SwitchToggleButtonDisabledForeground}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{StaticResource SwitchToggleButtonFillOnDisabled}" />
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{StaticResource SwitchToggleButtonKnobFillOnDisabled}" />
                            <Setter TargetName="Header" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="SwitchKnobBounds" Property="Opacity" Value="0" />
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="OuterBorder" Property="Stroke" Value="{StaticResource SwitchToggleButtonStrokeOnBorder}" />
                            <Setter TargetName="SwitchKnobOn" Property="Opacity" Value="1" />
                            <Setter TargetName="SwitchKnobOff" Property="Opacity" Value="0" />
                            <Setter TargetName="OffTextBlock" Property="Opacity" Value="0" />
                            <Setter TargetName="OnTextBlock" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Blue RadioButton Style  -->
    <Style x:Key="BlueRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource BlueRadioButtonStaticBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueRadioButtonStaticBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="radioButtonBorder"
                            Width="20"
                            Height="20"
                            Margin="1,1,2,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="100">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse
                                    x:Name="optionMark"
                                    MinWidth="6"
                                    MinHeight="6"
                                    Fill="{StaticResource BlueRadioButtonStaticGlyph}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="8,0,0,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource BlueRadioButtonMouseOverBackground}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource BlueRadioButtonMouseOverBorder}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource BlueRadioButtonMouseOverGlyph}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource BlueRadioButtonDisabledBackground}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource BlueRadioButtonDisabledBorder}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource BlueRadioButtonDisabledGlyph}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource BlueRadioButtonPressedBackground}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource BlueRadioButtonPressedBorder}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource BlueRadioButtonPressedGlyph}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource BlueRadioButtonIsCheckedBorder}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Border TextBox Style  -->
    <Style x:Key="BorderTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderTextBoxStaticBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="FocusBackgroundBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <Border
                            x:Name="FocusBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="FocusBackgroundBorder" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="FocusBackgroundBorder" Property="BorderBrush" Value="{StaticResource TextBoxFocusBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DarkBorderTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#111111" />
        <Setter Property="BorderBrush" Value="#111111" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="FocusBackgroundBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <Border
                            x:Name="FocusBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="FocusBackgroundBorder" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="FocusBackgroundBorder" Property="BorderBrush" Value="{StaticResource TextBoxFocusBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LightBorderTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#111111" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxFocusBorder}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="FocusBackgroundBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <Border
                            x:Name="FocusBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="FocusBackgroundBorder" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="FocusBackgroundBorder" Property="BorderBrush" Value="{StaticResource TextBoxFocusBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox ToggleButton Style  -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="templateRoot"
                            Background="{StaticResource BorderComboBoxBackground}"
                            BorderBrush="{StaticResource BorderComboBoxBorder}"
                            BorderThickness="2"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="splitBorder"
                                Width="20"
                                Margin="0,0,4,0"
                                HorizontalAlignment="Right"
                                SnapsToDevicePixels="true">
                                <TextBlock
                                    x:Name="arrow"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="12"
                                    FontWeight="Bold"
                                    Foreground="{StaticResource BorderComboBoxGlyph}"
                                    Opacity="0.8"
                                    Text="&#xE96E;" />
                            </Border>
                        </Border>
                        <Border
                            x:Name="FocusBorder"
                            Background="{StaticResource BorderComboBoxMouseOverBackground}"
                            BorderBrush="{StaticResource BorderComboBoxMouseOverBorder}"
                            BorderThickness="2"
                            CornerRadius="3"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="arrow" Property="Foreground" Value="{StaticResource BorderComboBoxPressedGlyph}" />
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource BorderComboBoxPressedBackground}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource BorderComboBoxPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="arrow" Property="Foreground" Value="{StaticResource BorderComboBoxDisabledGlyph}" />
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource BorderComboBoxDisabledBackground}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource BorderComboBoxDisabledBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox Template  -->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=toggleButton}"
                Placement="Center"
                PopupAnimation="Fade">
                <Themes:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{StaticResource BorderComboBoxPopupBackground}"
                        BorderBrush="{StaticResource BorderComboBoxPopupBorder}"
                        BorderThickness="2"
                        CornerRadius="3">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Style="{StaticResource ComboBoxToggleButton}"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#FFFFFFFF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ComboBox Template  -->
    <ControlTemplate x:Key="AnnotationComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=toggleButton}"
                Placement="Bottom"
                PopupAnimation="Slide"
                VerticalOffset="6">
                <Themes:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{StaticResource BorderComboBoxPopupBackground}"
                        BorderBrush="{StaticResource BorderComboBoxPopupBorder}"
                        BorderThickness="2"
                        CornerRadius="3">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Style="{StaticResource ComboBoxToggleButton}"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#FFFFFFFF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ComboBox Style  -->
    <Style x:Key="BorderComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource BorderComboBoxBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderComboBoxBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="DarkBorderComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="#111111" />
        <Setter Property="BorderBrush" Value="#111111" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="AnnotationBorderComboBoxStyle" BasedOn="{StaticResource BorderComboBoxStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="Template" Value="{StaticResource AnnotationComboBoxTemplate}" />
    </Style>

    <!--  ComboBox Item Style  -->
    <Style x:Key="BorderComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Rectangle x:Name="FocusRec" Fill="{StaticResource ComboBoxItemItemsviewHoverBackground}" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusRec" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemItemsviewSelectedBackground}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ComboBoxItemItemsviewHoverForeground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemItemsviewSelectedBackground}" />
                            <Setter TargetName="FocusRec" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ComboBoxItemItemsviewHoverForeground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemItemsviewSelectedBackground}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ComboBoxItemItemsviewHoverForeground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusRec" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Default Slider Style  -->
    <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
            <Border
                x:Name="grip"
                VerticalAlignment="Center"
                Background="{StaticResource SliderThumbStaticBackground}"
                CornerRadius="4" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbMouseOverBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbPressedBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbDisabledBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbDisabledBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
            <Border
                x:Name="grip"
                VerticalAlignment="Center"
                Background="{StaticResource SliderThumbStaticBackground}"
                CornerRadius="4" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbMouseOverBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbPressedBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbDisabledBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbDisabledBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RepeatButtonAccentColor" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
                        <Rectangle Width="{TemplateBinding Width}" Height="4" Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeRepeatButtonAccentColor" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
                        <Rectangle Width="{TemplateBinding Width}" Height="6" Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
            <Border
                x:Name="grip"
                Width="8"
                Height="24"
                VerticalAlignment="Center"
                Background="{StaticResource SliderThumbStaticBackground}"
                CornerRadius="4" />
            <Border
                x:Name="OverlayBorder"
                Width="8"
                Height="24"
                VerticalAlignment="Center"
                Background="#FF000000"
                CornerRadius="4"
                Opacity="0.3"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="OverlayBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="OverlayBorder" Property="Opacity" Value="0.15" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="OverlayBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="OverlayBorder" Property="Opacity" Value="0.3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbDisabledBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbDisabledBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbHorizontalLarge" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
            <Border
                x:Name="grip"
                Width="8"
                Height="24"
                VerticalAlignment="Center"
                Background="{StaticResource SliderThumbStaticBackground}"
                CornerRadius="4" />
            <Border
                x:Name="OverlayBorder"
                Width="8"
                Height="24"
                VerticalAlignment="Center"
                Background="#FF000000"
                CornerRadius="4"
                Opacity="0.3"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="OverlayBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="OverlayBorder" Property="Opacity" Value="0.15" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="OverlayBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="OverlayBorder" Property="Opacity" Value="0.3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbDisabledBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbDisabledBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Row="0"
                    Height="8"
                    Margin="0,0,0,8"
                    Fill="Black"
                    Opacity="0.5"
                    Placement="Top"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="4.0"
                    Margin="5,0"
                    VerticalAlignment="center"
                    Background="{StaticResource SliderThumbTrackBackground}"
                    BorderBrush="{StaticResource SliderThumbTrackBorder}"
                    BorderThickness="1">
                    <Canvas Margin="-6,-1">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Height="4.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource RepeatButtonAccentColor}" Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource RepeatButtonTransparent}" Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Width="8"
                            Height="24"
                            VerticalAlignment="Center"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbHorizontalDefault}" />
                    </Track.Thumb>
                </Track>
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="8"
                    Margin="0,8,0,0"
                    Fill="Black"
                    Opacity="0.5"
                    Placement="Bottom"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderHorizontalLarge" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Row="0"
                    Height="4"
                    Margin="0,0,0,2"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Top"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="6.0"
                    Margin="5,0"
                    VerticalAlignment="center"
                    Background="{StaticResource SliderThumbTrackBackground}"
                    BorderBrush="{StaticResource SliderThumbTrackBorder}"
                    BorderThickness="1">
                    <Canvas Margin="-6,-1">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Height="6.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource LargeRepeatButtonAccentColor}" Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource RepeatButtonTransparent}" Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Width="12"
                            Height="36"
                            VerticalAlignment="Center"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbHorizontalLarge}" />
                    </Track.Thumb>
                </Track>
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="4"
                    Margin="0,2,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalTop}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalBottom}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AccentSliderHorizontal" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Row="0"
                    Height="8"
                    Margin="0,0,0,8"
                    Fill="Black"
                    Opacity="0.5"
                    Placement="Top"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="4.0"
                    Margin="5,0"
                    VerticalAlignment="center"
                    Background="{StaticResource SliderThumbTrackBackground}"
                    BorderBrush="{StaticResource SliderThumbTrackBorder}"
                    BorderThickness="1">
                    <Canvas Margin="-6,-1">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Height="4.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource RepeatButtonAccentColor}" Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource RepeatButtonAccentColor}" Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Width="8"
                            Height="24"
                            VerticalAlignment="Center"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbHorizontalDefault}" />
                    </Track.Thumb>
                </Track>
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="8"
                    Margin="0,8,0,0"
                    Fill="Black"
                    Opacity="0.5"
                    Placement="Bottom"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
            <Border
                x:Name="grip"
                Width="24"
                Height="8"
                Background="{StaticResource SliderThumbStaticBackground}"
                BorderBrush="{StaticResource SliderThumbStaticBorder}"
                CornerRadius="4" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbMouseOverBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbPressedBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbDisabledBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbDisabledBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
            <Border
                x:Name="grip"
                Width="24"
                Height="8"
                Background="{StaticResource SliderThumbStaticBackground}"
                BorderBrush="{StaticResource SliderThumbStaticBorder}"
                CornerRadius="4" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbMouseOverBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbPressedBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbDisabledBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbDisabledBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
            <Border
                x:Name="grip"
                Width="24"
                Height="8"
                Background="{StaticResource SliderThumbStaticBackground}"
                BorderBrush="{StaticResource SliderThumbStaticBorder}"
                CornerRadius="4" />
            <Border
                x:Name="OverlayBorder"
                Width="24"
                Height="8"
                Background="#FF000000"
                CornerRadius="4"
                Opacity="0.3"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="OverlayBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="OverlayBorder" Property="Opacity" Value="0.15" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="OverlayBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="OverlayBorder" Property="Opacity" Value="0.3" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Background" Value="{StaticResource SliderThumbDisabledBackground}" />
                <Setter TargetName="grip" Property="BorderBrush" Value="{StaticResource SliderThumbDisabledBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Column="0"
                    Width="4"
                    Margin="0,0,2,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Left"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Column="1"
                    Width="4.0"
                    Margin="0,5"
                    HorizontalAlignment="center"
                    Background="{StaticResource SliderThumbTrackBackground}"
                    BorderBrush="{StaticResource SliderThumbTrackBorder}"
                    BorderThickness="1">
                    <Canvas Margin="-1,-6">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Width="4.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource RepeatButtonTransparent}" Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource RepeatButtonTransparent}" Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Width="18"
                            Height="11"
                            VerticalAlignment="Top"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbVerticalDefault}" />
                    </Track.Thumb>
                </Track>
                <TickBar
                    x:Name="BottomTick"
                    Grid.Column="2"
                    Width="4"
                    Margin="2,0,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Right"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalLeft}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalRight}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SliderThumbStaticForeground}" />
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LargeSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SliderThumbStaticForeground}" />
        <Setter Property="Template" Value="{StaticResource SliderHorizontalLarge}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AccentColorSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SliderThumbStaticForeground}" />
        <Setter Property="Template" Value="{StaticResource AccentSliderHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <Style x:Key="DisplayFileListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />-->
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="#FFFFFFFF" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Margin="0,0,0,10"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource DisplayFileItemMouseOverBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource DisplayFileItemMouseOverBorder}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource DisplayFileItemSelectedInactiveBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource DisplayFileItemSelectedInactiveBorder}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource DisplayFileItemSelectedActiveBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource DisplayFileItemSelectedActiveBorder}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="NoButtonScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle
                x:Name="Corner"
                Grid.Row="1"
                Grid.Column="1"
                Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Style="{StaticResource ScrollBarVerticalStyle}"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource ScrollBar.Static.Background}"
                        BorderBrush="{StaticResource ScrollBar.Static.Border}"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="rectangle"
                        Width="8"
                        Height="{TemplateBinding Height}"
                        Fill="{StaticResource ScrollBar.Static.Thumb}"
                        RadiusX="4"
                        RadiusY="4"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="rectangle"
                        Width="{TemplateBinding Width}"
                        Height="8"
                        Fill="{StaticResource ScrollBar.Static.Thumb}"
                        RadiusX="4"
                        RadiusY="4"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarVerticalStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton
                            x:Name="PART_LineUpButton"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource ScrollBarButton}"
                            Visibility="Collapsed">
                            <Path
                                x:Name="ArrowTop"
                                Margin="3,4,3,3"
                                Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                Stretch="Uniform" />
                        </RepeatButton>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            x:Name="PART_LineDownButton"
                            Grid.Row="2"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource ScrollBarButton}"
                            Visibility="Collapsed">
                            <Path
                                x:Name="ArrowBottom"
                                Margin="3,4,3,3"
                                Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>-->
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>-->
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    Grid.Column="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <RepeatButton
                                    x:Name="PART_LineLeftButton"
                                    Command="{x:Static ScrollBar.LineLeftCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource ScrollBarButton}">
                                    <Path
                                        x:Name="ArrowLeft"
                                        Margin="3"
                                        Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                                        Stretch="Uniform" />
                                </RepeatButton>
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Column="1"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton
                                    x:Name="PART_LineRightButton"
                                    Grid.Column="2"
                                    Command="{x:Static ScrollBar.LineRightCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource ScrollBarButton}">
                                    <Path
                                        x:Name="ArrowRight"
                                        Margin="3"
                                        Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                                        Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoButtonListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <!--<Setter Property="VerticalContentAlignment" Value="Center" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Padding="{TemplateBinding Padding}"
                            Focusable="false"
                            Template="{StaticResource NoButtonScrollViewerControlTemplate}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GIFListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Padding="{TemplateBinding Padding}"
                            Focusable="false"
                            Template="{StaticResource NoButtonScrollViewerControlTemplate}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                x:Name="circle"
                                Width="38"
                                Height="38"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="#FF4C4C4C" />
                            <materialDesign:PackIcon
                                x:Name="arrowDown"
                                Width="38"
                                Height="38"
                                Foreground="White"
                                Kind="ChevronDown"
                                Visibility="Collapsed" />
                            <materialDesign:PackIcon
                                x:Name="arrowRight"
                                Width="38"
                                Height="38"
                                Foreground="White"
                                Kind="ChevronRight"
                                Visibility="Visible" />
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="8,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrowDown" Property="Visibility" Value="Visible" />
                            <Setter TargetName="arrowRight" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ContrastRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource GalleryBtnBackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Foreground" Value="#FF4C4C4C" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Image
                                x:Name="ContentDefault"
                                Width="48"
                                Height="48"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-adjustments-default.png" />
                            <Image
                                x:Name="ContentPressed"
                                Width="48"
                                Height="48"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-adjustments-selected.png"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CropRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource GalleryBtnBackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Foreground" Value="#FF4C4C4C" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Image
                                x:Name="ContentDefault"
                                Width="52"
                                Height="52"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-crop-default.png" />
                            <Image
                                x:Name="ContentPressed"
                                Width="52"
                                Height="52"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-crop-selected.png"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransformRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource GalleryBtnBackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Foreground" Value="#FF4C4C4C" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Image
                                x:Name="ContentDefault"
                                Width="48"
                                Height="48"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-transform-default.png" />
                            <Image
                                x:Name="ContentPressed"
                                Width="48"
                                Height="48"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-transform-selected.png"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResizeRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource GalleryBtnBackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Foreground" Value="#FF4C4C4C" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Image
                                x:Name="ContentDefault"
                                Width="48"
                                Height="48"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-resize-default.png" />
                            <Image
                                x:Name="ContentPressed"
                                Width="48"
                                Height="48"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-resize-selected.png"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="AnnotationRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource UserManualBackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Foreground" Value="#FF4C4C4C" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Image
                                x:Name="ContentDefault"
                                Width="23"
                                Height="22"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Images/annotations-icon.png" />
                            <Image
                                x:Name="ContentPressed"
                                Width="23"
                                Height="22"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Images/annotationsSelected-icon.png"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="InfoRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource GalleryBtnBackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Foreground" Value="#FF4C4C4C" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Image
                                x:Name="ContentDefault"
                                Width="50"
                                Height="50"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-info-default.png" />
                            <Image
                                x:Name="ContentPressed"
                                Width="50"
                                Height="50"
                                Source="pack://application:,,,/Azure.LaserScanner;component/Resources/Images/Gallery/btn_gallery-info-selected.png"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentDefault" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPressed" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  cSeries Slider Brushes  -->
    <SolidColorBrush x:Key="csSliderThumb.Static.Foreground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="csSliderThumb.MouseOver.Background" Color="#FFDCECFC" />
    <SolidColorBrush x:Key="csSliderThumb.MouseOver.Border" Color="#FF7Eb4EA" />
    <SolidColorBrush x:Key="csSliderThumb.Pressed.Background" Color="#FFDAECFC" />
    <SolidColorBrush x:Key="csSliderThumb.Pressed.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="csSliderThumb.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="csSliderThumb.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="csSliderThumb.Static.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="csSliderThumb.Static.Border" Color="#FFACACAC" />
    <SolidColorBrush x:Key="csSliderThumb.Track.Border" Color="#FFD6D6D6" />
    <SolidColorBrush x:Key="csSliderThumb.Track.Background" Color="#FFE7EAEA" />
    <SolidColorBrush x:Key="csSliderTrackBackgroundBrush" Color="#FF363A3E" />
    <SolidColorBrush x:Key="csSliderTrackBorderBrush" Color="#FF16181A" />
    <SolidColorBrush x:Key="csSliderTrackParkFillBrush" Color="#FF050A12" />
    <SolidColorBrush x:Key="csSliderThumbBackgroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="csSliderThumbInnerBackgroundBrush" Color="#FF67AAF0" />
    
    <!--  cSeries Slider Style  -->
    <ControlTemplate x:Key="csSliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                VerticalAlignment="Center"
                Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                Fill="{StaticResource csSliderThumb.Static.Background}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{StaticResource csSliderThumb.Static.Border}"
                StrokeThickness="1"
                UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="csSliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                VerticalAlignment="Center"
                Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                Fill="{StaticResource csSliderThumb.Static.Background}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{StaticResource csSliderThumb.Static.Border}"
                StrokeThickness="1"
                UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="csRepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="csSliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Ellipse
                Width="36"
                Height="36"
                VerticalAlignment="Center"
                Fill="{StaticResource csSliderThumbBackgroundBrush}" />
            <Ellipse
                Width="20"
                Height="20"
                VerticalAlignment="Center"
                Fill="{StaticResource csSliderThumbInnerBackgroundBrush}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="csSliderHorizontal" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Row="0"
                    Height="4"
                    Margin="0,0,0,2"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Top"
                    Visibility="Collapsed" />
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="4"
                    Margin="0,2,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="36"
                    Margin="5,0"
                    VerticalAlignment="center"
                    Background="#6C737B"
                    BorderBrush="#393C41"
                    BorderThickness="1"
                    CornerRadius="18">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Canvas Margin="-6,-1">
                            <Rectangle
                                x:Name="PART_SelectionRange"
                                Grid.ColumnSpan="3"
                                Height="4.0"
                                Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                Visibility="Hidden" />
                        </Canvas>
                        <Rectangle
                            Grid.ColumnSpan="4"
                            Height="6"
                            Margin="10,0"
                            Fill="{StaticResource csSliderTrackParkFillBrush}" />
                        <Ellipse
                            Width="12"
                            Height="12"
                            Margin="9,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Fill="{StaticResource csSliderTrackParkFillBrush}" />
                        <Ellipse
                            Grid.Column="1"
                            Width="12"
                            Height="12"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="{StaticResource csSliderTrackParkFillBrush}" />
                        <Ellipse
                            Grid.Column="2"
                            Width="12"
                            Height="12"
                            Margin="0,0,9,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Fill="{StaticResource csSliderTrackParkFillBrush}" />
                        <Ellipse
                            Grid.Column="3"
                            Width="12"
                            Height="12"
                            Margin="0,0,9,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Fill="{StaticResource csSliderTrackParkFillBrush}" />
                    </Grid>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            VerticalAlignment="Center"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource csSliderThumbHorizontalDefault}">
                            <Thumb.Effect>
                                <DropShadowEffect ShadowDepth="2" />
                            </Thumb.Effect>
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource csSliderThumbHorizontalTop}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource csSliderThumbHorizontalBottom}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="csSliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                Fill="{StaticResource csSliderThumb.Static.Background}"
                Stretch="Fill"
                Stroke="{StaticResource csSliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="csSliderThumbVerticalRight" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                Fill="{StaticResource csSliderThumb.Static.Background}"
                Stretch="Fill"
                Stroke="{StaticResource csSliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="csSliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
                Fill="{StaticResource csSliderThumb.Static.Background}"
                Stretch="Fill"
                Stroke="{StaticResource csSliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource csSliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource csSliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="csSliderVertical" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Column="0"
                    Width="4"
                    Margin="0,0,2,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Left"
                    Visibility="Collapsed" />
                <TickBar
                    x:Name="BottomTick"
                    Grid.Column="2"
                    Width="4"
                    Margin="2,0,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Right"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Column="1"
                    Width="4.0"
                    Margin="0,5"
                    HorizontalAlignment="center"
                    Background="{StaticResource csSliderThumb.Track.Background}"
                    BorderBrush="{StaticResource csSliderThumb.Track.Border}"
                    BorderThickness="1">
                    <Canvas Margin="-1,-6">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Width="4.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Width="18"
                            Height="11"
                            VerticalAlignment="Top"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource csSliderThumbVerticalDefault}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource csSliderThumbVerticalLeft}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource csSliderThumbVerticalRight}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="cSeriesSilderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource csSliderThumb.Static.Foreground}" />
        <Setter Property="Template" Value="{StaticResource csSliderHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource csSliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GalleryViewRoundedCornerTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#FF1D2022" />
        <Setter Property="BorderBrush" Value="#FF999999" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="0"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  x:Key="GridViewHeaderDark" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        <Setter Property="TextBlock.Foreground" Value="#E5F1FD"/>
        <Setter Property="Background" Value="Black" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="#E5F1FD" />
    </Style>

    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Height="10" Width="10">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="./Images/slider-thumb.png"></ImageBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>